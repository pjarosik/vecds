// Class automatically generated by Dev-C++ New Class wizard

#ifndef CXML_NODE_H
#define CXML_NODE_H

#include "xml_constant.h"
#include "../XMLLib/iter_if.h"
#include <list>
#include <vector>
#include <string>
using namespace std;

#include "xml_element.h" // inheriting class's header file
#include "xml_parameter.h" // inheriting class's header file

/**
 * The class represents an xml node
 */

class CXML_Node : public CXML_Element
{
	public:
		// class constructor
		CXML_Node( const string &n ):CXML_Element( n, XML_NODE ) {  }
		// class destructor
		virtual ~CXML_Node();

		void AddElement( CXML_Element *el ) { elements.push_back( el ); }
		void AddParameter( CXML_Parameter *par ) { parameters.push_back( par ); }
		
		const ListOfParameters& GetParameters() const {  return parameters; }
		const ListOfElements& GetElems() const {  return elements; }
		
		const CXML_Node* FindNode( const string &filter, bool ex = true ) const;
		const CXML_Parameter* FindParameter( const string &filter, bool ex = true ) const;
        void  FindNodes( const string &filter, list< const CXML_Node * > &nodes, bool ex=true ) const;
		
protected:
  		CXML_Node();
		ListOfParameters parameters;
  		ListOfElements elements;
};


typedef  iter_if< CXML_Node, list< CXML_Element* >::const_iterator, CElemPredicator > nodal_iterator;

#endif // CXML_NODE_H
