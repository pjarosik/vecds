#############################################################################
# Makefile for building: libXMLLib.a
# Generated by qmake (2.01a) (Qt 4.8.6) on: pon. sty 12 15:59:26 2015
# Project:  XMLLib.pro
# Template: lib
# Command: /usr/local/Trolltech/Qt-4.8.6/bin/qmake -spec /usr/local/Trolltech/Qt-4.8.6/mkspecs/linux-g++ CONFIG+=debug -o Makefile XMLLib.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -g -fPIC -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -fPIC -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/local/Trolltech/Qt-4.8.6/mkspecs/linux-g++ -I. -I/usr/local/Trolltech/Qt-4.8.6/include -I.
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/local/Trolltech/Qt-4.8.6/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = xml_text.cpp \
		xml_remark.cpp \
		xml_preprocessing.cpp \
		xml_parameter.cpp \
		xml_outputdevice.cpp \
		xml_node.cpp \
		xml_inputdevice.cpp \
		xml_header.cpp \
		xml_element.cpp \
		xml_doctype.cpp \
		xml_creator.cpp \
		xml_cdata.cpp \
		xml_analyser.cpp \
		XML.cpp 
OBJECTS       = xml_text.o \
		xml_remark.o \
		xml_preprocessing.o \
		xml_parameter.o \
		xml_outputdevice.o \
		xml_node.o \
		xml_inputdevice.o \
		xml_header.o \
		xml_element.o \
		xml_doctype.o \
		xml_creator.o \
		xml_cdata.o \
		xml_analyser.o \
		XML.o
DIST          = /usr/local/Trolltech/Qt-4.8.6/mkspecs/common/unix.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/linux.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/gcc-base.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/gcc-base-unix.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/g++-base.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/g++-unix.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/qconfig.pri \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/debug.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/staticlib.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/static.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/qt.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/moc.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/resources.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/uic.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/lex.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/include_source_dir.prf \
		XMLLib.pro
QMAKE_TARGET  = XMLLib
DESTDIR       = 
TARGET        = libXMLLib.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


Makefile: XMLLib.pro  /usr/local/Trolltech/Qt-4.8.6/mkspecs/linux-g++/qmake.conf /usr/local/Trolltech/Qt-4.8.6/mkspecs/common/unix.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/linux.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/gcc-base.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/gcc-base-unix.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/g++-base.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/g++-unix.conf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/qconfig.pri \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/debug.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/staticlib.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/static.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/qt.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/moc.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/resources.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/uic.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/lex.prf \
		/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/local/Trolltech/Qt-4.8.6/mkspecs/linux-g++ CONFIG+=debug -o Makefile XMLLib.pro
/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/unix.conf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/linux.conf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/gcc-base.conf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/gcc-base-unix.conf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/g++-base.conf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/common/g++-unix.conf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/qconfig.pri:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/modules/qt_webkit_version.pri:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/qt_functions.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/qt_config.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/exclusive_builds.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/default_pre.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/debug.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/default_post.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/staticlib.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/static.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/warn_on.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/qt.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/unix/thread.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/moc.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/resources.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/uic.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/yacc.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/lex.prf:
/usr/local/Trolltech/Qt-4.8.6/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/local/Trolltech/Qt-4.8.6/mkspecs/linux-g++ CONFIG+=debug -o Makefile XMLLib.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/XMLLib1.0.0 || $(MKDIR) .tmp/XMLLib1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/XMLLib1.0.0/ && $(COPY_FILE) --parents xml_tokenizer.h xml_text.h xml_remark.h xml_preprocessing.h xml_parameter.h xml_outputdevice.h xml_node.h xml_inputdevice.h xml_header.h xml_exceptions.h xml_element.h xml_doctype.h xml_creator.h xml_constant.h xml_charvalidators.h xml_cdata.h xml_analyser.h XML.h iter_if.h .tmp/XMLLib1.0.0/ && $(COPY_FILE) --parents xml_text.cpp xml_remark.cpp xml_preprocessing.cpp xml_parameter.cpp xml_outputdevice.cpp xml_node.cpp xml_inputdevice.cpp xml_header.cpp xml_element.cpp xml_doctype.cpp xml_creator.cpp xml_cdata.cpp xml_analyser.cpp XML.cpp .tmp/XMLLib1.0.0/ && (cd `dirname .tmp/XMLLib1.0.0` && $(TAR) XMLLib1.0.0.tar XMLLib1.0.0 && $(COMPRESS) XMLLib1.0.0.tar) && $(MOVE) `dirname .tmp/XMLLib1.0.0`/XMLLib1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/XMLLib1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

xml_text.o: xml_text.cpp xml_text.h \
		xml_element.h \
		xml_exceptions.h \
		xml_outputdevice.h \
		xml_constant.h \
		iter_if.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_text.o xml_text.cpp

xml_remark.o: xml_remark.cpp xml_remark.h \
		xml_element.h \
		xml_exceptions.h \
		xml_outputdevice.h \
		xml_constant.h \
		iter_if.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_remark.o xml_remark.cpp

xml_preprocessing.o: xml_preprocessing.cpp xml_preprocessing.h \
		xml_element.h \
		xml_exceptions.h \
		xml_outputdevice.h \
		xml_constant.h \
		iter_if.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_preprocessing.o xml_preprocessing.cpp

xml_parameter.o: xml_parameter.cpp xml_parameter.h \
		xml_exceptions.h \
		xml_element.h \
		xml_outputdevice.h \
		xml_constant.h \
		iter_if.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_parameter.o xml_parameter.cpp

xml_outputdevice.o: xml_outputdevice.cpp xml_outputdevice.h \
		xml_exceptions.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_outputdevice.o xml_outputdevice.cpp

xml_node.o: xml_node.cpp xml_node.h \
		xml_constant.h \
		iter_if.h \
		xml_element.h \
		xml_exceptions.h \
		xml_outputdevice.h \
		xml_parameter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_node.o xml_node.cpp

xml_inputdevice.o: xml_inputdevice.cpp xml_inputdevice.h \
		xml_exceptions.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_inputdevice.o xml_inputdevice.cpp

xml_header.o: xml_header.cpp xml_header.h \
		xml_element.h \
		xml_exceptions.h \
		xml_outputdevice.h \
		xml_constant.h \
		iter_if.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_header.o xml_header.cpp

xml_element.o: xml_element.cpp xml_element.h \
		xml_exceptions.h \
		xml_outputdevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_element.o xml_element.cpp

xml_doctype.o: xml_doctype.cpp xml_doctype.h \
		xml_element.h \
		xml_exceptions.h \
		xml_outputdevice.h \
		xml_constant.h \
		iter_if.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_doctype.o xml_doctype.cpp

xml_creator.o: xml_creator.cpp xml_creator.h \
		xml_outputdevice.h \
		xml_exceptions.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_creator.o xml_creator.cpp

xml_cdata.o: xml_cdata.cpp xml_cdata.h \
		xml_element.h \
		xml_exceptions.h \
		xml_outputdevice.h \
		xml_constant.h \
		iter_if.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_cdata.o xml_cdata.cpp

xml_analyser.o: xml_analyser.cpp xml_analyser.h \
		xml_inputdevice.h \
		xml_exceptions.h \
		xml_tokenizer.h \
		xml_charvalidators.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xml_analyser.o xml_analyser.cpp

XML.o: XML.cpp XML.h \
		xml_parameter.h \
		xml_exceptions.h \
		xml_element.h \
		xml_outputdevice.h \
		xml_constant.h \
		iter_if.h \
		xml_inputdevice.h \
		xml_creator.h \
		xml_remark.h \
		xml_node.h \
		xml_preprocessing.h \
		xml_cdata.h \
		xml_doctype.h \
		xml_header.h \
		xml_text.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o XML.o XML.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/lib/ || $(MKDIR) $(INSTALL_ROOT)/usr/lib/ 
	-$(INSTALL_FILE) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/lib/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

