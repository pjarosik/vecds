// Class automatically generated by Dev-C++ New Class wizard

#ifndef XML_GRAPHDEVICE_H
#define XML_GRAPHDEVICE_H

#include "GraphDevice.h" // inheriting class's header file
#include "../XMLLib/xml_creator.h"
#include "../XMLLib/xml_outputdevice.h"

/**
 * No description
 */
class CXML_GraphDevice : public CGraphDevice
{
	public:
		// class constructor
        CXML_GraphDevice( CGraphDevice *g, CXML_OutputDevice &o, const CPaintFrame *f=0 );
		// class destructor
		virtual ~CXML_GraphDevice( );
		
//		unsigned int GetType() 					{ return type; 									}
		virtual	double GetFontHeight() 		        	{ return gDC->GetFontHeight(); 					}
		virtual double GetTextWidth(const char *tx) 		{ return gDC->GetTextWidth( tx ); 				}
		virtual double TranslateTextHeight( double height ) { return gDC->TranslateTextHeight( height ); 	}
		virtual double GetHeight()                          { return gDC->GetHeight(); 						}
		virtual double GetWidth()                           { return gDC->GetWidth(); 						}
		
		virtual void SetAspect( double, double );
		virtual void SetBrush( const DBrush& );
		virtual void CreateBrushArray( const vector<DBrush> & );
		virtual void CreatePenArray( const vector<DPen> & );
		virtual void SelectArrayBrush( unsigned int );
		virtual void SelectArrayPen( unsigned int );
		virtual void SetPredefinedBrush( unsigned int );
		virtual void SetHollowBrush( );
		virtual void SetPen( const DPen& );
		virtual void SetNullPen();
		virtual void SetPredefinedPen( unsigned int );
		virtual void SetTextColor( const DColor& );
		virtual void SetFontHeight( double );
		virtual void SetPredefinedTextColor( unsigned int );
		virtual void SetXORMode( );
		virtual void SetPutMode( );
		virtual void SetBkTransparentMode();
		virtual void AssignFont(const char *nm, double ws);
		virtual void Rectangle( double, double, double, double );
		virtual void Line( double, double, double, double );
		virtual void Polygon( vector<DPoint2D> &dp );
		virtual void Polyline( vector<DPoint2D> &dp );
		virtual void Ellipse(double,double,double,double);
		virtual void Write(double,double,const char*);
		virtual void WriteVerically(double,double,const char*);
		virtual void MakeContext();
		virtual void DeleteContext();

private:

        CGraphDevice  *gDC;
		CXML_Creator	creator;
		// No description
		void CreateColor(const DColor &col);
		void CreatePen(const DPen &pen);
		void CreateBrush(const DBrush &brush);
};

#endif // XML_GRAPHDEVICE_H
