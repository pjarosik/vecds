// Class automatically generated by Dev-C++ New Class wizard

#ifndef DCOLOR_H
#define DCOLOR_H

/**
 * No description
 */
class DColor
{
public:

    void 	GetRGB( double &r, double &g, double &b ) const { r = GetR(); g = GetG(); b = GetB(); }
    void 	GetRGBA( double &r, double &g, double &b, double &a ) const { r = GetR(); g = GetG(); b = GetB(); a = GetAlpha(); }

    double  GetG() const { return G; }
    double  GetB() const { return B; }
    double  GetR() const { return R; }
    double  GetAlpha() const { return A; }


    DColor( double r, double g, double b ) {	R = r; G = g; B = b; }
   	DColor() { R=0; G=0; B=0; }
    DColor(const DColor &cl) {	cl.GetRGBA(R,G,B,A); }
	virtual ~DColor() { }

	const DColor& operator =(const DColor &cl) { cl.GetRGB(R,G,B); return cl; }
    bool operator==( const DColor &c) const { return ( R == c.R ) && ( G == c.G ) && ( B == c.B ); }
    bool operator<( const DColor &c) const { return ( R < c.R ) || ( G < c.G ) || ( B < c.B ); }

protected:
    double  R, G, B, A;
};

#endif // DCOLOR_H
